// Generated by wxt
import "wxt/browser";

declare module "wxt/browser" {
  /**
   * See https://developer.chrome.com/docs/extensions/reference/i18n/#method-getMessage
   */
  interface GetMessageOptions {
    /**
     * See https://developer.chrome.com/docs/extensions/reference/i18n/#method-getMessage
     */
    escapeLt?: boolean
  }

  export interface WxtI18n extends I18n.Static {
    /**
     * The extension or app ID; you might use this string to construct URLs for resources inside the extension. Even unlocalized extensions can use this message.
     * Note: You can't use this message in a manifest file.
     *
     * "<browser.runtime.id>"
     */
    getMessage(
      messageName: "@@extension_id",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "<browser.i18n.getUiLocale()>"
     */
    getMessage(
      messageName: "@@ui_locale",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * The text direction for the current locale, either "ltr" for left-to-right languages such as English or "rtl" for right-to-left languages such as Japanese.
     *
     * "<ltr|rtl>"
     */
    getMessage(
      messageName: "@@bidi_dir",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * If the @@bidi_dir is "ltr", then this is "rtl"; otherwise, it's "ltr".
     *
     * "<rtl|ltr>"
     */
    getMessage(
      messageName: "@@bidi_reversed_dir",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * If the @@bidi_dir is "ltr", then this is "left"; otherwise, it's "right".
     *
     * "<left|right>"
     */
    getMessage(
      messageName: "@@bidi_start_edge",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * If the @@bidi_dir is "ltr", then this is "right"; otherwise, it's "left".
     *
     * "<right|left>"
     */
    getMessage(
      messageName: "@@bidi_end_edge",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Developer checklist"
     */
    getMessage(
      messageName: "extName",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "This extension helps you remembering all the stuff that needs to be done in order to cover all steps of your definition of done."
     */
    getMessage(
      messageName: "extDescription",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Developer checklist Options"
     */
    getMessage(
      messageName: "extOptionsTitle",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "We hope your company, team or/and yourself benefit from our extension and are able to work with Jira more efficient.<br/>If you want to send some 'bugs' to support the extension, it would be highly appreciated."
     */
    getMessage(
      messageName: "extAbout",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Save"
     */
    getMessage(
      messageName: "Save",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Export options"
     */
    getMessage(
      messageName: "Export",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Import options"
     */
    getMessage(
      messageName: "Import",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Reset settings to factory default"
     */
    getMessage(
      messageName: "Restore",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Reset"
     */
    getMessage(
      messageName: "Reset",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Reload"
     */
    getMessage(
      messageName: "Reload",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "The url is invalid!"
     */
    getMessage(
      messageName: "errUrlInvalid",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Host"
     */
    getMessage(
      messageName: "Host",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Categories"
     */
    getMessage(
      messageName: "Categories",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Category"
     */
    getMessage(
      messageName: "Category",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "New Category"
     */
    getMessage(
      messageName: "NewCategory",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Projects"
     */
    getMessage(
      messageName: "Projects",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Project"
     */
    getMessage(
      messageName: "Project",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "New Project"
     */
    getMessage(
      messageName: "NewProject",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "New Board"
     */
    getMessage(
      messageName: "NewBoard",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "New Build"
     */
    getMessage(
      messageName: "NewBuild",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Delete "$1"?"
     */
    getMessage(
      messageName: "TitleDelete",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Update "$1""
     */
    getMessage(
      messageName: "TitleUpdate",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Create new item"
     */
    getMessage(
      messageName: "TitleCreate",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Associated projects are also deleted!"
     */
    getMessage(
      messageName: "SubTitleDeleteCategory",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Delete"
     */
    getMessage(
      messageName: "Delete",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Cancel"
     */
    getMessage(
      messageName: "Cancel",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Search"
     */
    getMessage(
      messageName: "Search",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Add"
     */
    getMessage(
      messageName: "Add",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Close"
     */
    getMessage(
      messageName: "Close",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "This value should not be blank."
     */
    getMessage(
      messageName: "errNotBlank",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "This value already exists."
     */
    getMessage(
      messageName: "errDuplicated",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Maximum $1 characters."
     */
    getMessage(
      messageName: "errMaxLength",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "The value should be minimum $1."
     */
    getMessage(
      messageName: "errMinimum",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "General"
     */
    getMessage(
      messageName: "General",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "checklists"
     */
    getMessage(
      messageName: "Checklists",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "template"
     */
    getMessage(
      messageName: "Template",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "templates"
     */
    getMessage(
      messageName: "Templates",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "New template"
     */
    getMessage(
      messageName: "NewTemplate",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Create a new template"
     */
    getMessage(
      messageName: "CreateNewTemplate",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Job"
     */
    getMessage(
      messageName: "Job",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Build"
     */
    getMessage(
      messageName: "Build",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Builds"
     */
    getMessage(
      messageName: "Builds",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Name"
     */
    getMessage(
      messageName: "Name",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Label"
     */
    getMessage(
      messageName: "Label",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Issues"
     */
    getMessage(
      messageName: "Issues",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Command / Content"
     */
    getMessage(
      messageName: "CommandOrContent",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Text Content"
     */
    getMessage(
      messageName: "TextContent",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Issues in Progress"
     */
    getMessage(
      messageName: "IssuesInProgress",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Cleanup interval"
     */
    getMessage(
      messageName: "CleanupInterval",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Board Key"
     */
    getMessage(
      messageName: "BoardKey",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Boards"
     */
    getMessage(
      messageName: "Boards",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Default"
     */
    getMessage(
      messageName: "Default",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Checklist enabled"
     */
    getMessage(
      messageName: "ChecklistEnabled",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Buttons"
     */
    getMessage(
      messageName: "Buttons",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Button enabled"
     */
    getMessage(
      messageName: "ButtonEnabled",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Success"
     */
    getMessage(
      messageName: "Success",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Failed"
     */
    getMessage(
      messageName: "Failed",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Text"
     */
    getMessage(
      messageName: "Text",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Comment"
     */
    getMessage(
      messageName: "Comment",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Send comment immediately"
     */
    getMessage(
      messageName: "SendCommentImmediately",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "List completely checked"
     */
    getMessage(
      messageName: "ListCompletelyChecked",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "A custom name to find the command, content or others"
     */
    getMessage(
      messageName: "hintCommandLabel",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "The command, content or others to copy"
     */
    getMessage(
      messageName: "hintCommand",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Specifies after how many days after the last use an issue will be removed from storage."
     */
    getMessage(
      messageName: "hintJiraCleanup",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "The maximum number of issues that will be displayed on the quick selection."
     */
    getMessage(
      messageName: "hintJiraIssues",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "At least the Jira URL must be specified in the options."
     */
    getMessage(
      messageName: "missingJiraUrl",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Open options"
     */
    getMessage(
      messageName: "openOptions",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Open Issue"
     */
    getMessage(
      messageName: "openIssue",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Last opened Issues"
     */
    getMessage(
      messageName: "lastOpenedIssues",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "pinned"
     */
    getMessage(
      messageName: "pinned",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "The import file must be of type application/json."
     */
    getMessage(
      messageName: "importWrongType",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "An empty file was selected."
     */
    getMessage(
      messageName: "importEmptyFile",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "The given JSON file is not supported."
     */
    getMessage(
      messageName: "importNotSupported",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Settings saved."
     */
    getMessage(
      messageName: "settingsSaved",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Copied to clipboard"
     */
    getMessage(
      messageName: "copiedToClipboard",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Preview"
     */
    getMessage(
      messageName: "Preview",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Rooms"
     */
    getMessage(
      messageName: "Rooms",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Messages"
     */
    getMessage(
      messageName: "Messages",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Main client"
     */
    getMessage(
      messageName: "MainClient",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Client enabled"
     */
    getMessage(
      messageName: "ClientEnabled",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Open tab with Jira issue to use checklist."
     */
    getMessage(
      messageName: "openWithIssue",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Start work"
     */
    getMessage(
      messageName: "startWork",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Stop work"
     */
    getMessage(
      messageName: "stopWork",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Issue will be preselected for CI-Builds and Merge Requests."
     */
    getMessage(
      messageName: "helpWork",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "When issue is pinned, it is sorted to the top in the quick selection and not automatically cleaned up."
     */
    getMessage(
      messageName: "helpPin",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Remember Issue, can be used in Jira templates."
     */
    getMessage(
      messageName: "helpAddIssue",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "Replace issue, all incidents from the same job will be replaced."
     */
    getMessage(
      messageName: "helpReplaceIssue",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    /**
     * "CI-Build"
     */
    getMessage(
      messageName: "ciBuild",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
    getMessage(
      messageName: "@@extension_id" | "@@ui_locale" | "@@bidi_dir" | "@@bidi_reversed_dir" | "@@bidi_start_edge" | "@@bidi_end_edge" | "extName" | "extDescription" | "extOptionsTitle" | "extAbout" | "Save" | "Export" | "Import" | "Restore" | "Reset" | "Reload" | "errUrlInvalid" | "Host" | "Categories" | "Category" | "NewCategory" | "Projects" | "Project" | "NewProject" | "NewBoard" | "NewBuild" | "TitleDelete" | "TitleUpdate" | "TitleCreate" | "SubTitleDeleteCategory" | "Delete" | "Cancel" | "Search" | "Add" | "Close" | "errNotBlank" | "errDuplicated" | "errMaxLength" | "errMinimum" | "General" | "Checklists" | "Template" | "Templates" | "NewTemplate" | "CreateNewTemplate" | "Job" | "Build" | "Builds" | "Name" | "Label" | "Issues" | "CommandOrContent" | "TextContent" | "IssuesInProgress" | "CleanupInterval" | "BoardKey" | "Boards" | "Default" | "ChecklistEnabled" | "Buttons" | "ButtonEnabled" | "Success" | "Failed" | "Text" | "Comment" | "SendCommentImmediately" | "ListCompletelyChecked" | "hintCommandLabel" | "hintCommand" | "hintJiraCleanup" | "hintJiraIssues" | "missingJiraUrl" | "openOptions" | "openIssue" | "lastOpenedIssues" | "pinned" | "importWrongType" | "importEmptyFile" | "importNotSupported" | "settingsSaved" | "copiedToClipboard" | "Preview" | "Rooms" | "Messages" | "MainClient" | "ClientEnabled" | "openWithIssue" | "startWork" | "stopWork" | "helpWork" | "helpPin" | "helpAddIssue" | "helpReplaceIssue" | "ciBuild",
      substitutions?: string | string[],
      options?: GetMessageOptions,
    ): string;
  }
}
